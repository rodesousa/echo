version: '3.8'

services:
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    entrypoint: >
      /bin/sh -c "
      minio server /mnt/data --console-address \":9001\" &
      sleep 5;
      /usr/bin/mc alias set myminio http://localhost:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb --ignore-existing myminio/dembrane;
      /usr/bin/mc policy set download myminio/dembrane;
      wait
      "
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_VOLUMES=/mnt/data
    volumes:
      - minio_data:/mnt/data
    networks:
      - echo-network
    restart: unless-stopped

  redis:
    image: 'bitnamilegacy/redis:6.2.14'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/bitnami/redis/data
    ports:
      - "6379:6379"
    networks:
      - echo-network

  postgres:
    image: pgvector/pgvector:0.6.2-pg16
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - echo-network

  neo4j:
    image: neo4j:5.26.4
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_logs:/logs
      - neo4j_config:/config
      - neo4j_data:/data
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
    networks:
      - echo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 40s

  directus:
    build:
      context: ../directus
      dockerfile: Dockerfile
    ports:
      - "8055:8055"
    volumes:
      - directus_uploads:/directus/uploads
      - ../directus/templates:/directus/templates
    environment:
      - PUBLIC_URL=${DIRECTUS_PUBLIC_URL}
      - PORT=8055
      - SECRET=${DIRECTUS_SECRET}
      - TELEMETRY=false
      - ADMIN_EMAIL=${DIRECTUS_ADMIN_EMAIL}
      - ADMIN_PASSWORD=${DIRECTUS_ADMIN_PASSWORD}
      - ADMIN_TOKEN=${DIRECTUS_ADMIN_TOKEN}
      - DB_CLIENT=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DATABASE=${POSTGRES_DB}
      - DB_EXCLUDE_TABLES=${DIRECTUS_DB_EXCLUDE_TABLES}
      - WEBSOCKETS_ENABLED=true
      - CORS_ENABLED=true
      - CORS_ORIGIN=${DIRECTUS_CORS_ORIGIN}
      - CORS_CREDENTIALS=true
      - SESSION_COOKIE_SECURE=false
      - SESSION_COOKIE_SAME_SITE=lax
      - USER_INVITE_URL_ALLOW_LIST=${DIRECTUS_USER_INVITE_URL}
      - USER_REGISTER_URL_ALLOW_LIST=${DIRECTUS_USER_REGISTER_URL}
      - PASSWORD_RESET_URL_ALLOW_LIST=${DIRECTUS_PASSWORD_RESET_URL}
      - STORAGE_LOCATIONS=local,s3
      - STORAGE_LOCAL_DRIVER=local
      - STORAGE_LOCAL_ROOT=./uploads
      - STORAGE_S3_DRIVER=s3
      - STORAGE_S3_KEY=${MINIO_ROOT_USER}
      - STORAGE_S3_SECRET=${MINIO_ROOT_PASSWORD}
      - STORAGE_S3_BUCKET=dembrane
      - STORAGE_S3_ENDPOINT=http://minio:9000
      - STORAGE_S3_REGION=${STORAGE_S3_REGION}
      - EMAIL_TRANSPORT=smtp
      - EMAIL_FROM=${DIRECTUS_EMAIL_FROM}
      - EMAIL_SMTP_HOST=${DIRECTUS_EMAIL_SMTP_HOST}
      - EMAIL_SMTP_PORT=${DIRECTUS_EMAIL_SMTP_PORT}
      - EMAIL_SMTP_USER=${DIRECTUS_EMAIL_SMTP_USER}
      - EMAIL_SMTP_PASSWORD=${DIRECTUS_EMAIL_SMTP_PASSWORD}
      - EMAIL_SMTP_SECURE=false
      - EMAIL_SMTP_IGNORE_TLS=false
    depends_on:
      - postgres
      - redis
    networks:
      - echo-network

  backend:
    build:
      context: ../server
      dockerfile: Dockerfile
      target: base
    ports:
      - "8000:8000"
    environment:
      - DIRECTUS_SECRET=${DIRECTUS_SECRET}
      - DIRECTUS_TOKEN=${DIRECTUS_ADMIN_TOKEN}
      - DATABASE_URL=postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - API_BASE_URL=${API_BASE_URL}
      - ADMIN_BASE_URL=${ADMIN_BASE_URL}
      - PARTICIPANT_BASE_URL=${PARTICIPANT_BASE_URL}
      - DIRECTUS_BASE_URL=http://directus:8055
      - DEBUG_MODE=${DEBUG_MODE}
      - DISABLE_SENTRY=${DISABLE_SENTRY}
      - SERVE_API_DOCS=${SERVE_API_DOCS}
      - DISABLE_REDACTION=${DISABLE_REDACTION}
      - STORAGE_S3_KEY=${MINIO_ROOT_USER}
      - STORAGE_S3_SECRET=${MINIO_ROOT_PASSWORD}
      - STORAGE_S3_BUCKET=dembrane
      - STORAGE_S3_ENDPOINT=http://minio:9000
      - STORAGE_S3_REGION=${STORAGE_S3_REGION}
      - STORAGE_S3_USE_PATH_STYLE=${STORAGE_S3_USE_PATH_STYLE}
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_CHAT_MODEL=${ANTHROPIC_CHAT_MODEL}
      - ENABLE_LITELLM_WHISPER_TRANSCRIPTION=${ENABLE_LITELLM_WHISPER_TRANSCRIPTION}
      - RUNPOD_WHISPER_MAX_REQUEST_THRESHOLD=${RUNPOD_WHISPER_MAX_REQUEST_THRESHOLD}
      - LITELLM_WHISPER_API_KEY=${LITELLM_WHISPER_API_KEY}
      - LITELLM_WHISPER_MODEL=${LITELLM_WHISPER_MODEL}
      - LITELLM_WHISPER_URL=${LITELLM_WHISPER_URL}
      - SMALL_LITELLM_MODEL=${SMALL_LITELLM_MODEL}
      - SMALL_LITELLM_API_KEY=${SMALL_LITELLM_API_KEY}
      - SMALL_LITELLM_API_BASE=${SMALL_LITELLM_API_BASE}
      - SMALL_LITELLM_API_VERSION=${SMALL_LITELLM_API_VERSION}
      - MEDIUM_LITELLM_MODEL=${MEDIUM_LITELLM_MODEL}
      - MEDIUM_LITELLM_API_KEY=${MEDIUM_LITELLM_API_KEY}
      - MEDIUM_LITELLM_API_BASE=${MEDIUM_LITELLM_API_BASE}
      - MEDIUM_LITELLM_API_VERSION=${MEDIUM_LITELLM_API_VERSION}
      - LARGE_LITELLM_MODEL=${LARGE_LITELLM_MODEL}
      - LARGE_LITELLM_API_KEY=${LARGE_LITELLM_API_KEY}
      - LARGE_LITELLM_API_BASE=${LARGE_LITELLM_API_BASE}
      - LARGE_LITELLM_API_VERSION=${LARGE_LITELLM_API_VERSION}
      - LIGHTRAG_LITELLM_MODEL=${LIGHTRAG_LITELLM_MODEL}
      - LIGHTRAG_LITELLM_API_KEY=${LIGHTRAG_LITELLM_API_KEY}
      - LIGHTRAG_LITELLM_API_BASE=${LIGHTRAG_LITELLM_API_BASE}
      - LIGHTRAG_LITELLM_API_VERSION=${LIGHTRAG_LITELLM_API_VERSION}
      - LIGHTRAG_LITELLM_AUDIOMODEL_MODEL=${LIGHTRAG_LITELLM_AUDIOMODEL_MODEL}
      - LIGHTRAG_LITELLM_AUDIOMODEL_API_KEY=${LIGHTRAG_LITELLM_AUDIOMODEL_API_KEY}
      - LIGHTRAG_LITELLM_AUDIOMODEL_API_VERSION=${LIGHTRAG_LITELLM_AUDIOMODEL_API_VERSION}
      - LIGHTRAG_LITELLM_AUDIOMODEL_API_BASE=${LIGHTRAG_LITELLM_AUDIOMODEL_API_BASE}
      - LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_MODEL=${LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_MODEL}
      - LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_API_KEY=${LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_API_KEY}
      - LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_API_VERSION=${LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_API_VERSION}
      - LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_API_BASE=${LIGHTRAG_LITELLM_TEXTSTRUCTUREMODEL_API_BASE}
      - LIGHTRAG_LITELLM_EMBEDDING_MODEL=${LIGHTRAG_LITELLM_EMBEDDING_MODEL}
      - LIGHTRAG_LITELLM_EMBEDDING_API_KEY=${LIGHTRAG_LITELLM_EMBEDDING_API_KEY}
      - LIGHTRAG_LITELLM_EMBEDDING_API_VERSION=${LIGHTRAG_LITELLM_EMBEDDING_API_VERSION}
      - LIGHTRAG_LITELLM_EMBEDDING_API_BASE=${LIGHTRAG_LITELLM_EMBEDDING_API_BASE}
      - LIGHTRAG_LITELLM_INFERENCE_MODEL=${LIGHTRAG_LITELLM_INFERENCE_MODEL}
      - LIGHTRAG_LITELLM_INFERENCE_API_KEY=${LIGHTRAG_LITELLM_INFERENCE_API_KEY}
      - DISABLE_CHAT_TITLE_GENERATION=${DISABLE_CHAT_TITLE_GENERATION}
    volumes:
      - ../server/:/code/server:cached
      - ../..:/workspaces:cached
      - /var/run/docker.sock:/var/run/docker.sock
    command: uvicorn dembrane.main:app --host 0.0.0.0 --port 8000 --reload --loop asyncio
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      neo4j:
        condition: service_healthy
      directus:
        condition: service_started
    networks:
      - echo-network

networks:
  echo-network:
    driver: bridge

volumes:
  minio_data:
  redis_data:
  postgres_data:
  neo4j_logs:
  neo4j_config:
  neo4j_data:
  neo4j_plugins:
  directus_uploads:
